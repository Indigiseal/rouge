name: Agent Apply (first TODO)

on:
  workflow_dispatch: {}

# minimal permissions for this job
permissions:
  contents: write
  pull-requests: write

# prevent two applies from racing on the same branch
concurrency:
  group: agent-apply-${{ github.ref }}
  cancel-in-progress: true

jobs:
  apply:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install deps (OpenAI SDK + glob)
        run: npm i --no-fund --no-audit openai@^4 glob@^10

      - name: Run agent (writes edits directly)
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_MODEL: gpt-4o-mini
        run: node scripts/agent_apply.mjs

      - name: Extract first unchecked TODO (for PR body)
        id: task
        run: |
          set -e
          TASK="$(grep -m1 '^- \[ \] ' TODO.md | sed 's/^- \[ \] //')"
          echo "text<<EOF" >> $GITHUB_OUTPUT
          echo "${TASK:-<none found>}" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Check for changes
        id: changes
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Show diff (summary)
        if: steps.changes.outputs.changed == 'true'
        run: |
          git --no-pager diff --staged || true
          git --no-pager diff || true

      - name: Create PR
        if: steps.changes.outputs.changed == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          branch: agent/task-${{ github.run_number }}
          commit-message: "agent: implement first TODO task"
          title: "Agent: implement first TODO task"
          body: |
            Auto-generated changes from **TODO.md**.

            **First unchecked task**
            ```
            ${{ steps.task.outputs.text }}
            ```

      - name: No changes (nothing to commit)
        if: steps.changes.outputs.changed != 'true'
        run: echo "Agent produced no file edits. Nothing to commit."
